{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","hoc/WithAuthRedirect.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","s","item","to","id","activeClassName","active","name","Message","message","maxLength100","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","requiredField","placeholder","mapStateToPropsForRedirect","state","isAuth","auth","compose","connect","messagesPage","dispatch","sendMessage","newMessageBody","sendMessageAC","Component","RedirectComponent","this","React","dialogsElements","dialogsData","map","d","messagesElements","messagesData","m","dialogs","dialogsItem","messages","values"],"mappings":"uHACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,6BAA6B,KAAO,sBAAsB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+FCQhMC,EAAa,SAACC,GACvB,OAAO,yBAAKC,UAAWC,IAAEC,MAAM,kBAAC,IAAD,CAASC,GAAE,mBAAcJ,EAAMK,IACtBC,gBAAiBJ,IAAEK,QAASP,EAAMQ,QCJjEC,EAAU,SAACT,GAAD,OAAwB,yBAAKC,UAAWC,IAAEQ,SAAUV,EAAMU,U,yCCuC3EC,EAAeC,YAAiB,KAkB/BC,EAAsBC,YAAkC,CAACC,KAAM,wBAAzCD,EAZC,SAACd,GAC3B,OACI,0BAAMgB,SAAUhB,EAAMiB,cAClB,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAeX,GAAeH,KAAM,iBACpEe,YAAa,uBACpB,6BACI,6C,+CCrDZC,EAA6B,SAACC,GAAD,MAA0B,CACvDC,OAAQD,EAAME,KAAKD,SCeRE,sBACXC,aAdkB,SAACJ,GACnB,MAAO,CACHK,aAAcL,EAAMK,iBAIH,SAACC,GACtB,MAAO,CACHC,YAAa,SAACC,GAAD,OACTF,EAASG,YAAcD,UDJH,SAACE,GAAoC,IAE3DC,EAF0D,uKAIxD,OAAKC,KAAKrC,MAAM0B,OAET,kBAACS,EAAcE,KAAKrC,OAFI,kBAAC,IAAD,CAAUI,GAAG,eAJY,GAEhCkC,IAAMH,WAUtC,OAFqCN,YAAQL,EAARK,CAAoCO,KCF9DR,EFA+B,SAAC5B,GAG3C,IAAIuC,EAAkBvC,EAAM8B,aAAaU,YAAYC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYrC,GAAIqC,EAAErC,GAAIG,KAAMkC,EAAElC,UACxFmC,EAAmB3C,EAAM8B,aAAac,aAAaH,KAAI,SAACI,GAAD,OAAO,kBAAC,EAAD,CAASnC,QAASmC,EAAEnC,aAMtF,OAAKV,EAAM0B,OAGP,yBAAKzB,UAAWC,IAAE4C,SACd,yBAAK7C,UAAWC,IAAE6C,aACbR,GAEL,yBAAKtC,UAAWC,IAAE8C,UACd,6BAAML,GACN,kBAAC9B,EAAD,CAAqBG,SAbb,SAACiC,GACjBjD,EAAMgC,YAAYiB,EAAOhB,qBAGH,kBAAC,IAAD,CAAU7B,GAAI","file":"static/js/4.5723aca8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__sVUxF\",\"dialogsItem\":\"Dialogs_dialogsItem__1NwiW\",\"item\":\"Dialogs_item__HEqyY\",\"active\":\"Dialogs_active__38a5k\",\"messages\":\"Dialogs_messages__2o2wV\",\"message\":\"Dialogs_message__3SE42\"};","import s from \"../Dialogs.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\ntype DialogsItemType = {\r\n    name: string\r\n    id: number\r\n}\r\n\r\nexport const DialogItem = (props: DialogsItemType) => {\r\n    return <div className={s.item}><NavLink to={`/Dialogs/${props.id}`}\r\n                                            activeClassName={s.active}>{props.name}</NavLink></div>\r\n}","import s from \"../Dialogs.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MessageType = {\r\n    message: string\r\n}\r\n\r\nexport const Message = (props: MessageType) => <div className={s.message}>{props.message}</div>","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {MessagesPageType} from \"../../redux/store\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm, SubmitHandler} from \"redux-form\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators\";\r\n\r\nexport type DialogsType = {\r\n    messagesPage: MessagesPageType\r\n    updateNewMessageBody: (body: string) => void\r\n    sendMessage: (values: string) => void\r\n    isAuth: boolean\r\n}\r\n\r\nexport type NewMessageBodyFormType = {\r\n    newMessageBody: string\r\n}\r\n\r\nexport const Dialogs: React.FC<DialogsType> = (props) => {\r\n    debugger\r\n\r\n    let dialogsElements = props.messagesPage.dialogsData.map(d => <DialogItem id={d.id} name={d.name}/>)\r\n    let messagesElements = props.messagesPage.messagesData.map((m) => <Message message={m.message}/>)\r\n\r\n    let addNewMessage = (values: NewMessageBodyFormType) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItem}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength100 = maxLengthCreator(100)\r\n\r\ntype AddMessageFormPropsType = {\r\n    handleSubmit: SubmitHandler\r\n}\r\n\r\nexport const AddMessageForm = (props: AddMessageFormPropsType) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} validate={[requiredField, maxLength100]} name={'newMessageBody'}\r\n                   placeholder={'enter your message'}/>\r\n            <div>\r\n                <button>send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n const AddMessageFormRedux = reduxForm<NewMessageBodyFormType>({form: 'dialogAddMessageForm'})(AddMessageForm)","import React, {Component} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport type WithAuthRedirectType = {\r\n    isAuth: boolean\r\n}\r\n\r\nexport const withAuthRedirect = (Component: React.ComponentType) => {\r\n\r\n    class RedirectComponent extends React.Component<WithAuthRedirectType> {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/Login'/>\r\n\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n\r\n}","import React from \"react\";\r\nimport {sendMessageAC} from \"../../redux/dialogs-reducer\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        messagesPage: state.messagesPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody: string) =>\r\n            dispatch(sendMessageAC(newMessageBody))\r\n    }\r\n}\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n"],"sourceRoot":""}